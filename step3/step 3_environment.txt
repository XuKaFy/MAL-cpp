第三步的environment用类Environment表示。Environment类包括当前层的表和上一层Environment的指针。当本层没有搜索到，就到上一层进行搜索。

由于按照第二步写出来的evalList不能选择不求值，所以我们在eval中遇到以if、cond等原子作为列表开头时（这些函数需要选择性求值），不再用evalList进行求值，而是用别的函数处理之。

这一步中，“别的函数”指代：

	quote
	cond

和

	lambda
	def!
	let*
	if

你会发现，这些函数在racket中直接输入会报错，但是第二步实现的buildin函数直接输入会显示#<procedure:xxx>。

在实现lambda时，我们从AbstractType继承一个LambdaType表示一个闭包。